"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable no-console */
var express_1 = __importDefault(require("express"));
var http_1 = __importDefault(require("http"));
var swagger_ui_express_1 = __importDefault(require("swagger-ui-express"));
var apollo_server_express_1 = require("apollo-server-express");
var apollo_server_core_1 = require("apollo-server-core");
var graphql_1 = require("graphql");
var load_1 = require("@graphql-tools/load");
var load_files_1 = require("@graphql-tools/load-files");
var merge_1 = require("@graphql-tools/merge");
var graphql_file_loader_1 = require("@graphql-tools/graphql-file-loader");
var swaggerDocOptions_1 = require("./swaggerDocOptions");
var path_1 = __importDefault(require("path"));
var routes_1 = require("./routes");
var cors_1 = __importDefault(require("cors"));
var app = (0, express_1.default)();
var port = process.env.PORT || 3000;
var hostUrl = process.env.HOST_URL || "http://localhost:".concat(port);
// CORS Configuration from environment variables
// CORS_ORIGINS: Comma-separated list of allowed origins
// CORS_METHODS: Comma-separated list of allowed HTTP methods  
// CORS_HEADERS: Comma-separated list of allowed headers
// CORS_CREDENTIALS: Enable/disable credentials (default: true)
// Enable CORS for all routes
var corsOrigins = process.env.CORS_ORIGINS ?
    process.env.CORS_ORIGINS.split(',').map(function (origin) { return origin.trim(); }) :
    [];
var corsMethods = process.env.CORS_METHODS ?
    process.env.CORS_METHODS.split(',').map(function (method) { return method.trim(); }) :
    ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'];
var corsHeaders = process.env.CORS_HEADERS ?
    process.env.CORS_HEADERS.split(',').map(function (header) { return header.trim(); }) :
    ['Content-Type', 'Authorization'];
app.use((0, cors_1.default)({
    origin: __spreadArray(__spreadArray([], corsOrigins, true), [
        /^http:\/\/localhost:\d+$/,
        /^http:\/\/127\.0\.0\.1:\d+$/ // Allow any 127.0.0.1 port
    ], false),
    methods: corsMethods,
    allowedHeaders: corsHeaders,
    credentials: process.env.CORS_CREDENTIALS !== 'false'
}));
app.use(routes_1.mainRouter);
app.use('/api-docs', swagger_ui_express_1.default.serve);
app.use('/api-docs', swagger_ui_express_1.default.setup(swaggerDocOptions_1.openapiSpecification));
var loadedTypeDefs = (0, load_1.loadSchemaSync)(path_1.default.join(__dirname, './**/*.graphql'), { loaders: [new graphql_file_loader_1.GraphQLFileLoader()] });
var loadedResolvers = (0, load_files_1.loadFilesSync)(path_1.default.join(__dirname, './**/*.resolver.{ts,js}'));
var typeDefs = (0, merge_1.mergeTypeDefs)(loadedTypeDefs);
if (process.env.NODE_ENV === 'development') {
    console.log('\n=== GraphQL Schema Start ===\n');
    var printedTypeDefs = (0, graphql_1.print)(typeDefs);
    console.log(printedTypeDefs);
    console.log('\n=== GraphQL Schema End ===\n');
}
var resolvers = (0, merge_1.mergeResolvers)(loadedResolvers);
var httpServer = http_1.default.createServer(app);
var server = new apollo_server_express_1.ApolloServer({
    typeDefs: typeDefs,
    resolvers: resolvers,
    plugins: [(0, apollo_server_core_1.ApolloServerPluginDrainHttpServer)({ httpServer: httpServer })]
});
server.start().then(function () {
    server.applyMiddleware({ app: app });
    app.listen(port, function () {
        console.log("NseIndia App started in port ".concat(port));
        console.log("For API docs: ".concat(hostUrl, "/api-docs"));
        console.log("Open ".concat(hostUrl, " in browser."));
        console.log("For graphql: ".concat(hostUrl).concat(server.graphqlPath));
        // Log CORS configuration
        if (corsOrigins.length > 0) {
            console.log("CORS Origins: ".concat(corsOrigins.join(', ')));
        }
        console.log("CORS Methods: ".concat(corsMethods.join(', ')));
        console.log("CORS Headers: ".concat(corsHeaders.join(', ')));
        console.log("CORS Credentials: ".concat(process.env.CORS_CREDENTIALS !== 'false'));
    });
});
//# sourceMappingURL=server.js.map